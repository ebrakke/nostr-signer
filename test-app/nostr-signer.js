(function(s,t){typeof exports=="object"&&typeof module<"u"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(s=typeof globalThis<"u"?globalThis:s||self,t(s.NostrSigner={}))})(this,function(s){"use strict";var c=Object.defineProperty;var u=(s,t,i)=>t in s?c(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i;var o=(s,t,i)=>u(s,typeof t!="symbol"?t+"":t,i);class t{constructor(n){o(this,"bunkerWindow",null);o(this,"pending");this.signerUrl=n,this.pending=new Map}async connect(){this.bunkerWindow&&!this.bunkerWindow.closed||(this.bunkerWindow=window.open(this.signerUrl,"NostrSigner","width=500,height=500"),window.addEventListener("message",n=>{const e=n.data,r=this.pending.get(e.id);r&&(e.error?r.reject(new Error(e.error)):r.resolve(e.result),this.pending.delete(e.id))}))}async sendRequest(n){const e=Math.random().toString(36).slice(2);return new Promise((r,d)=>{var p;this.pending.set(e,{resolve:r,reject:d}),(p=this.bunkerWindow)==null||p.postMessage({...n,id:e},this.signerUrl)})}async getPublicKey(){return this.sendRequest({type:"getPublicKey"})}async signEvent(n){return this.sendRequest({type:"signEvent",params:n})}async getRelays(){return this.sendRequest({type:"getRelays"})}async nip04Encrypt(n,e){return this.sendRequest({type:"nip04.encrypt",params:{pubkey:n,plaintext:e}})}async nip04Decrypt(n,e){return this.sendRequest({type:"nip04.decrypt",params:{pubkey:n,ciphertext:e}})}async nip44Encrypt(n,e){return this.sendRequest({type:"nip44.encrypt",params:{pubkey:n,plaintext:e}})}async nip44Decrypt(n,e){return this.sendRequest({type:"nip44.decrypt",params:{pubkey:n,ciphertext:e}})}}s.Nostr=t,Object.defineProperty(s,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=nostr-signer.js.map
